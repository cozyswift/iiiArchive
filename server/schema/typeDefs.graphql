scalar DateTime
scalar URL


type MaterialType {
    id:ID!
    typeName:String!
}

input InputMaterialType {
    id:ID!
    typeName:String!
}


type ImageArr {
    id:ID!
    regUser:String!
    fileName:String!
    examUrl:[URL!]
    width:String
    height:String
    tag:[String]
    regIP:String
    fileType:String
    materialId:String
}



input InputImageArr {
    id:ID!
    regUser:String!
    fileName:String!
    examUrl:[URL!]
    width:String
    height:String
    tag:[String]
    regIP:String
    fileType:String
    materialId:String
}

type Material {
    id:ID!
    archivistId:String!
    title:String!
    description:String
    picture:[ImageArr]!
    createdAt:DateTime!
    creator:String
    materialType:MaterialType
    donor:[String!]
    keyword:[String]
    identificationNum:[String]
}

input InputMaterial {
    id:ID
    archivistId:String
    title:String
    description:String
    picture:[InputImageArr]
    createdAt:DateTime
    creator:String
    materialType:InputMaterialType
    donor:[String!]
    keyword:[String]
    identificationNum:[String]
}


type Archivist {
    id:ID!
    archivistId:ID!
    name:String!
    material:[Material!]
}

type Query {
    materialList:[Material]
    material(materialId:ID!):Material
    archivist:Archivist
}

type Mutation {
    addMaterial(title:String,archivistId:String):Material
    addNewMaterial(newMaterial:InputMaterial):Material
}
